<?php
defined('BASEPATH') OR exit('');

class Staffs extends CI_Model{
    public function __construct(){
        parent::__construct();
    }

    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */


    /**
     * [add description]
     * @param [type] $u_name   [description]
     * @param [type] $f_name   [description]
     * @param [type] $l_name   [description]
     * @param [type] $password [description]
     * @param [type] $role     [description]
     * @param [type] $mobile   [description]
     */
    public function add($u_name, $f_name, $l_name, $password, $role, $mobile){
        $data = ['user_name'=>$u_name, 'first_name'=>$f_name, 'last_name'=>$l_name, 'password'=>$password, 'role'=>$role,
            'mobile'=>$mobile];

        //set the datetime based on the db driver in use
        $this->db->platform() == "sqlite3"
                ?
        $this->db->set('created_on', "datetime('now')", FALSE)
                :
        $this->db->set('created_on', "NOW()", FALSE);

        $this->db->insert('staffs', $data);

        if($this->db->affected_rows() > 0){
            return $this->db->insert_id();
        }

        else{
            return FALSE;
        }
    }

    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */

    /**
     *
     * @param type $staffs_id
     * @return boolean
     */
    public function update_last_login($staffs_id){
        $this->db->where('id', $staffs_id);

        //set the datetime based on the db driver in use
        $this->db->platform() == "sqlite3"
                ?
        $this->db->set('last_login', "datetime('now')", FALSE)
                :
        $this->db->set('last_login', "NOW()", FALSE);

        $this->db->update('staffs');

        if(!$this->db->error()){
            return TRUE;
        }

        else{
            return FALSE;
        }
    }


    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */

    /**
     * Get some details about staffs (stored in session)
     * @param type $email
     * @return boolean
     */
    public function get_staff_info($email){
        $this->db->select('id, first_name, last_name, role');
        $this->db->where('email', $email);

        $run_q = $this->db->get('staffs');

        if($run_q->num_rows() > 0){
            return $run_q->result();
        }

        else{
            return FALSE;
        }
    }




   /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */

    /**
     *
     * @param type $orderBy
     * @param type $orderFormat
     * @param type $start
     * @param type $limit
     * @return boolean
     */
    public function getAll($orderBy = "first_name", $orderFormat = "ASC", $start = 0, $limit = ""){
        $this->db->select('id, user_name, first_name, last_name, role, mobile, created_on, last_login, account_status, deleted');
        $this->db->where("id != ", $_SESSION['staffs_id']);
        $this->db->where("user_name != ", "AdminDemo");//added to prevent people from removing the demo staffs account
        $this->db->limit($limit, $start);
        $this->db->order_by($orderBy, $orderFormat);

        $run_q = $this->db->get('staffs');

        if($run_q->num_rows() > 0){
            return $run_q->result();
        }

        else{
            return FALSE;
        }
    }


    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */

   /**
    *
    * @param type $staffs_id
    * @param type $new_status New account status
    * @return boolean
    */
    public function suspend($staffs_id, $new_status){
        $this->db->where('id', $staffs_id);
        $this->db->update('staffs', ['account_status'=>$new_status]);

        if($this->db->affected_rows()){
            return TRUE;
        }

        else{
            return FALSE;
        }
    }


   /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */

   /**
    *
    * @param type $staffs_id
    * @param type $new_value
    * @return boolean
    */
    public function delete($staffs_id, $new_value){
        $this->db->where('id', $staffs_id);
        $this->db->update('staffs', ['deleted'=>$new_value]);

        if($this->db->affected_rows()){
            return TRUE;
        }

        else{
            return FALSE;
        }
   }


    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */


    /**
     *
     * @param type $value
     * @return boolean
     */
    public function staffsSearch($value){
        $q = "SELECT * FROM staffs WHERE
                id != {$_SESSION['staffs_id']}
                    AND
                (
                MATCH(first_name) AGAINST(?)
                || MATCH(user_name) AGAINST(?)
                || MATCH(last_name) AGAINST(?)
                || MATCH(first_name, last_name) AGAINST(?)
                || MATCH(mobile) AGAINST(?)
                || user_name LIKE '%".$this->db->escape_like_str($value)."%'
                || first_name LIKE '%".$this->db->escape_like_str($value)."%'
                || last_name LIKE '%".$this->db->escape_like_str($value)."%'
                || mobile LIKE '%".$this->db->escape_like_str($value)."%'
                )";

        $run_q = $this->db->query($q, [$value, $value, $value, $value, $value]);

        if($run_q->num_rows() > 0){
            return $run_q->result();
        }

        else{
            return FALSE;
        }
    }

    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */

    public function update($staffs_id, $user_name, $first_name, $last_name, $mobile, $role){
        $data = ['user_name'=>$user_name, 'first_name'=>$first_name, 'last_name'=>$last_name,
                    'mobile'=>$mobile, 'role'=>$role];

        $this->db->where('id', $staffs_id);

        $this->db->update('staffs', $data);

        return TRUE;
    }


    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */



}
